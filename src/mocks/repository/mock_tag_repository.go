// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MizukiShigi/cms-go/internal/domain/repository (interfaces: TagRepository)

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	entity "github.com/MizukiShigi/cms-go/internal/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockTagRepository is a mock of TagRepository interface.
type MockTagRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTagRepositoryMockRecorder
}

// MockTagRepositoryMockRecorder is the mock recorder for MockTagRepository.
type MockTagRepositoryMockRecorder struct {
	mock *MockTagRepository
}

// NewMockTagRepository creates a new mock instance.
func NewMockTagRepository(ctrl *gomock.Controller) *MockTagRepository {
	mock := &MockTagRepository{ctrl: ctrl}
	mock.recorder = &MockTagRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagRepository) EXPECT() *MockTagRepositoryMockRecorder {
	return m.recorder
}

// FindOrCreateByName mocks base method.
func (m *MockTagRepository) FindOrCreateByName(ctx context.Context, tag *entity.Tag) (*entity.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindOrCreateByName", ctx, tag)
	ret0, _ := ret[0].(*entity.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindOrCreateByName indicates an expected call of FindOrCreateByName.
func (mr *MockTagRepositoryMockRecorder) FindOrCreateByName(ctx, tag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOrCreateByName", reflect.TypeOf((*MockTagRepository)(nil).FindOrCreateByName), ctx, tag)
}